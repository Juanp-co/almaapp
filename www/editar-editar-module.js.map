{"version":3,"sources":["./src/app/views/perfil/editar/editar-routing.module.ts","./src/app/views/perfil/editar/editar.module.ts","./src/app/views/perfil/editar/editar.service.ts","./src/app/views/perfil/editar/editar.page.scss","./src/app/views/perfil/editar/editar.page.html","./src/app/views/perfil/editar/editar.page.ts"],"names":[],"mappings":"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","file":"editar-editar-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditarPage } from './editar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditarPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditarPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditarPageRoutingModule } from './editar-routing.module';\n\nimport { EditarPage } from './editar.page';\nimport { ComponentsModule } from '../../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditarPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [EditarPage]\n})\nexport class EditarPageModule {}\n","import { Injectable } from '@angular/core';\nimport {bloodType, civilStatus, companyType, gender, educationLevels, professions} from '../../../../Utils/profile.data';\nimport {departments} from '../../../../Utils/locations.data';\nimport {AxiosService} from '../../../services/axios.service';\nimport {GlobalService} from '../../../services/global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditarService {\n\n  professionsList: any[] = professions;\n  companyTypeList: string[] = companyType;\n  departmentsList: any[] = departments;\n  educationLevel: string[] = educationLevels;\n  bloodTypeList: string[] = bloodType;\n  civilStatusList: string[] = civilStatus;\n  genderList: string[] = gender;\n\n  constructor(\n    private axios: AxiosService,\n    private globalSer: GlobalService,\n  ) { }\n\n  async updateProfile(data: any): Promise<any | null> {\n    const res: any = await this.axios.putData('/user', data);\n\n    if (res && res.success) return res.data.data;\n    return this.globalSer.altResponse(res);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0YXIucGFnZS5zY3NzIn0= */\";","export default \"<ion-content>\\n  <ion-header>\\n    <app-minheader title=\\\"Editar perfil\\\"></app-minheader>\\n  </ion-header>\\n\\n  <div *ngIf=\\\"formData\\\">\\n    <ion-card>\\n      <ion-card-content class=\\\"ion-no-padding\\\">\\n        <ion-row class=\\\"ion-justify-content-center\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nombre(s) (*)</ion-label>\\n              <ion-input [(ngModel)]=\\\"formData.names\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Apellido(s) (*)</ion-label>\\n              <ion-input [(ngModel)]=\\\"formData.lastNames\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Correo electrónico (*)</ion-label>\\n              <ion-input [(ngModel)]=\\\"formData.email\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Teléfono (*)</ion-label>\\n              <ion-input [(ngModel)]=\\\"formData.phone\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Fecha de nacimiento (*)</ion-label>\\n              <ion-datetime\\n                [(ngModel)]=\\\"formData.birthday\\\"\\n                displayFormat=\\\"DD/MM/YYYY\\\"\\n                min=\\\"1910-03-14\\\"\\n                max=\\\"{{maxDate}}\\\"\\n                doneText=\\\"Listo\\\"\\n                cancelText=\\\"Cancelar\\\"\\n                (ionChange)=\\\"setDate()\\\"\\n              >\\n              </ion-datetime>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Sexo (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"gender[formData.gender] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                (click)=\\\"showAlertList('gender', 'gender', formData.gender)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Tipo de sangre (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"bloodType[formData.bloodType] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                (click)=\\\"showAlertList('bloodType', 'bloodType', formData.bloodType)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Estado civil (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"civilStatus[formData.civilStatus] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                (click)=\\\"showAlertList('civilStatus', 'civilStatus', formData.civilStatus)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nivel educativo (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"educationLevel[formData.educationLevel] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                (click)=\\\"showAlertList('educationLevel', 'educationLevel', formData.educationLevel)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Profesión (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"professions[formData.profession] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                (click)=\\\"showAlertList('profession', 'professions', formData.profession)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">¿Posee una empresa? (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"formData.company\\\"\\n                autocomplete=\\\"off\\\"\\n                (click)=\\\"showAlertYesOrNotList('company', formData.company)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item *ngIf=\\\"formData.company === 'Si';\\\">\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Tipo de empresa (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"companyType[formData.companyType] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                class=\\\"ion-text-uppercase\\\"\\n                (click)=\\\"showAlertList('companyType', 'companyType', formData.companyType)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">¿Estás bautizado?</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"formData.baptized\\\"\\n                autocomplete=\\\"off\\\"\\n                (click)=\\\"showAlertYesOrNotList('baptized', formData.baptized)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Departamento (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"departments[formData.department] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                class=\\\"ion-text-uppercase\\\"\\n                (click)=\\\"showAlertList('department', 'departments', formData.department)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Ciudad (*)</ion-label>\\n              <ion-input\\n                [readonly]=\\\"true\\\"\\n                [value]=\\\"cities[formData.city] || ''\\\"\\n                autocomplete=\\\"off\\\"\\n                class=\\\"ion-text-uppercase\\\"\\n                (click)=\\\"showAlertList('city', 'cities', formData.city)\\\"\\n              ></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Barrio o localidad (*)</ion-label>\\n              <ion-input [(ngModel)]=\\\"formData.locality\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\">\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Dirección (*)</ion-label>\\n              <ion-input [(ngModel)]=\\\"formData.direction\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"ion-margin-top ion-margin-bottom\\\">\\n          <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n            <ion-button color=\\\"light\\\" (click)=\\\"back()\\\">\\n              <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n              Cancelar\\n            </ion-button>\\n            <ion-button color=\\\"primary\\\" (click)=\\\"confirmUpdate()\\\">\\n              <ion-icon name=\\\"save-outline\\\" slot=\\\"start\\\"></ion-icon>\\n              Guardar\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n  </div>\\n\\n\\n\\n</ion-content>\\n\";","import { Component, OnInit} from '@angular/core';\nimport {NavController} from '@ionic/angular';\nimport dayjs from 'dayjs';\nimport {EditarService} from './editar.service';\nimport {IEditar} from './editar.model';\nimport {PerfilService} from '../perfil.service';\nimport {CookiesService} from '../../../services/cookies.service';\nimport {GlobalService} from '../../../services/global.service';\nimport {\n  checkDate,\n  checkEmail,\n  checkIfValueIsNumber,\n  checkNameOrLastName,\n  checkPhone,\n  checkTitlesOrDescriptions, onlyLettersInputValidation, onlyNumbersInputValidation\n} from '../../../../Utils/validations.functions';\n\n@Component({\n  selector: 'app-editar',\n  templateUrl: './editar.page.html',\n  styleUrls: ['./editar.page.scss'],\n})\nexport class EditarPage implements OnInit {\n  professions = [];\n  companyType = [];\n  educationLevel = [];\n  bloodType = [];\n  departments = [];\n  cities = [];\n  civilStatus = [];\n  gender = [];\n  yesOrNotValues = ['No', 'Si'];\n  maxDate: any = null;\n  formData: IEditar | null = null;\n\n  constructor(\n    private editarService: EditarService,\n    private cookieService: CookiesService,\n    private perfilService: PerfilService,\n    private globalSer: GlobalService,\n    private navCtrl: NavController,\n  ) {\n    this.educationLevel = editarService.educationLevel;\n    this.professions = editarService.professionsList;\n    this.bloodType = editarService.bloodTypeList;\n    this.companyType = editarService.companyTypeList;\n    this.civilStatus = editarService.civilStatusList;\n    this.gender = editarService.genderList;\n    this.departments = editarService.departmentsList.map(d => d.department);\n    this.maxDate = dayjs().format('YYYY-MM-DD');\n  }\n\n  async ngOnInit() {\n    await this.globalSer.presentLoading();\n    const token = this.cookieService.getCookie('token');\n    if (token) {\n      const userData: IEditar | any = this.cookieService.getCookie('data');\n      if (userData) {\n        this.formData = {...userData} as IEditar;\n        this.formData.company = this.formData.company ? 'Si' : 'No';\n        this.formData.baptized = this.formData.baptized ? 'Si' : 'No';\n        if (this.formData.department !== null) this.getCity();\n        await this.globalSer.dismissLoading();\n      }\n      else await this.errorSession();\n    }\n    else await this.errorSession();\n  }\n\n  async back() {\n    await this.navCtrl.back();\n  }\n\n  getCity(clearCity = false) {\n    const filter = this.editarService.departmentsList[this.formData.department] || null;\n    if (filter) this.cities = filter.cities || [];\n    if (clearCity) this.formData.city = null;\n  }\n\n  setDate() {\n    if (this.formData.birthday) {\n      this.formData.birthday = dayjs(this.formData.birthday).format('YYYY-MM-DD');\n    }\n  }\n\n  async errorSession() {\n    await this.globalSer.presentAlert('Alerta', 'Disculpe, pero no se encontró una sesión activa.');\n    this.globalSer.clearAllData();\n    await this.globalSer.dismissLoading();\n    await this.navCtrl.navigateBack(['/']);\n  }\n\n  /*\n    Alerts\n   */\n\n  async showAlertList(input: string, nameArray: string, selected: any = null) {\n    const inputs: any = [];\n    for (const [i, value] of this[nameArray].entries()) {\n      inputs.push({\n        name: `value-${i}`,\n        type: 'radio',\n        label: value,\n        value: i,\n        checked: selected !== null && selected.toString() === i.toString(),\n      });\n    }\n\n    const updateData = (selectedValue: any) => {\n      this.formData[input] = selectedValue;\n      if (input === 'department') this.getCity(true);\n    };\n\n    await this.globalSer.alertWithList({\n      inputs,\n      confirmAction: updateData\n    });\n  }\n\n  async showAlertYesOrNotList(input: string, selected: any = null) {\n    const inputs: any = [];\n    for (const [i, value] of this.yesOrNotValues.entries()) {\n      inputs.push({\n        name: `value-${i}`,\n        type: 'radio',\n        label: value,\n        value,\n        checked: value === selected,\n      });\n    }\n\n    const updateData = (selectedValue: any) => { this.formData[input] = selectedValue; };\n\n    await this.globalSer.alertWithList({\n      inputs,\n      confirmAction: updateData\n    });\n  }\n\n  /*\n    validations\n   */\n\n  validateOnlyNumbers(event: any) {\n    onlyNumbersInputValidation(event);\n  }\n\n  validateOnlyLetters(event: any) {\n    onlyLettersInputValidation(event);\n  }\n\n  validateData(): string|null {\n    const { formData } = this;\n    if (!checkEmail(formData.email)) return 'Disculpe, pero debe indicar su correo electrónico.';\n    if (!checkNameOrLastName(formData.names)) return 'Disculpe, pero debe indicar su nombre.';\n    if (!checkNameOrLastName(formData.lastNames)) return 'Disculpe, pero debe indicar su apellido.';\n    if (!checkPhone(formData.phone)) return 'Disculpe, pero debe indicar su número de teléfono.';\n    if (!checkDate(formData.birthday)) return 'Disculpe, pero debe indicar su fecha de nacimiento.';\n    if (!checkIfValueIsNumber(`${formData.gender}`)) return 'Disculpe, pero debe indicar su sexo.';\n    if (!checkIfValueIsNumber(`${formData.bloodType}`)) return 'Disculpe, pero debe indicar su tipo de sangre.';\n    if (!checkIfValueIsNumber(`${formData.civilStatus}`)) return 'Disculpe, pero debe indicar su estado civil.';\n    if (!checkIfValueIsNumber(`${formData.educationLevel}`)) return 'Disculpe, pero debe indicar su nivel educativo.';\n    if (!checkIfValueIsNumber(`${formData.profession}`)) return 'Disculpe, pero debe indicar su profesión.';\n    if (formData.company === null || formData.company === undefined) return 'Disculpe, pero debe indicar si posee una empresa.';\n    if (formData.company !== null && formData.company === 'Si')\n      if (!checkIfValueIsNumber(`${formData.companyType}`)) return 'Disculpe, pero debe indicar el tipo de empresa que posee.';\n    if (formData.baptized === null || formData.baptized === undefined)\n      return 'Disculpe, pero debe indicar si usted se encuentra bautizado.';\n    if (!checkIfValueIsNumber(`${formData.department}`)) return 'Disculpe, pero debe indicar el departamento de residencia.';\n    if (!checkIfValueIsNumber(`${formData.city}`)) return 'Disculpe, pero debe indicar la ciudad de residencia.';\n    if (!checkTitlesOrDescriptions(formData.locality)) return 'Disculpe, pero debe indicar el nombre de la localidad de residencia.';\n    if (!checkTitlesOrDescriptions(formData.direction)) return 'Disculpe, pero debe indicar su dirección de residencia.';\n\n    return null;\n  }\n\n  async updateData() {\n    const validated = this.validateData();\n\n    if (validated) await this.globalSer.presentAlert('Alerta', validated);\n    else {\n      await this.globalSer.presentLoading('Actualizando perfil, por favor espere ...');\n      const data: any = Object.assign({}, this.formData);\n      data.company = data.company === 'Si';\n      data.baptized = data.baptized === 'Si';\n      const updated = await this.editarService.updateProfile(data);\n\n      if (updated && !updated.error) {\n        const userData = this.cookieService.getCookie('data');\n        if (userData) this.cookieService.setCookie('data', {...userData, ...updated});\n        await this.globalSer.dismissLoading();\n        await this.globalSer.presentAlert('¡Éxito!', 'Se ha actualizado su perfil exitosamente.');\n        await this.back();\n      }\n      else if (updated && updated.error) {\n        await this.globalSer.dismissLoading();\n        await this.globalSer.errorSession();\n      }\n      else await this.globalSer.dismissLoading();\n    }\n  }\n\n  /*\n    Update\n   */\n\n  async confirmUpdate() {\n    const validated = this.validateData();\n\n    if (validated) await this.globalSer.presentAlert('Alerta', validated);\n    else {\n      await this.globalSer.alertConfirm({\n        header: 'Actualizar perfil',\n        message: '¿Está seguro qué desea actualizar los datos de su perfil?',\n        confirmAction: () => this.updateData()\n      });\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}