{"version":3,"sources":["./src/app/views/estadistica/estadistica.page.html","./src/app/views/estadistica/estadistica.service.ts","./src/app/views/estadistica/estadistica.page.scss","./src/app/views/estadistica/estadistica.page.ts","./src/app/views/estadistica/estadistica-routing.module.ts","./src/app/views/estadistica/estadistica.module.ts"],"names":[],"mappings":"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","file":"views-estadistica-estadistica-module.js","sourcesContent":["export default \"<ion-content>\\n  <ion-header>\\n    <app-minheader title=\\\"Estadística\\\"></app-minheader>\\n  </ion-header>\\n\\n  <ion-row class=\\\"ion-no-padding\\\">\\n    <ion-col size=\\\"12\\\">\\n      <div class=\\\"ion-margin-bottom\\\">\\n        <ion-button color=\\\"light\\\" (click)=\\\"setShowFilter()\\\">\\n          <ion-icon name=\\\"filter-outline\\\" slot=\\\"start\\\" *ngIf=\\\"!showFilter\\\"></ion-icon>\\n          <ion-icon name=\\\"close-outline\\\" slot=\\\"start\\\" *ngIf=\\\"showFilter\\\"></ion-icon>\\n          <ion-text>Filtrar</ion-text>\\n        </ion-button>\\n      </div>\\n    </ion-col>\\n    <ion-col size=\\\"12\\\" *ngIf=\\\"showFilter\\\">\\n      <ion-card>\\n        <ion-card-content class=\\\"ion-no-padding\\\">\\n          <ion-row class=\\\"ion-no-padding\\\">\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">A partir de:</ion-label>\\n                <ion-datetime\\n                  [(ngModel)]=\\\"queryParams.initDate\\\"\\n                  displayFormat=\\\"DD/MM/YYYY\\\"\\n                  [min]=\\\"minInitDate\\\"\\n                  [max]=\\\"maxInitDate\\\"\\n                  doneText=\\\"Listo\\\"\\n                  cancelText=\\\"Cancelar\\\"\\n                >\\n                </ion-datetime>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Hasta:</ion-label>\\n                <ion-datetime\\n                  [(ngModel)]=\\\"queryParams.endDate\\\"\\n                  displayFormat=\\\"DD/MM/YYYY\\\"\\n                  [min]=\\\"minEndDate\\\"\\n                  [max]=\\\"maxEndDate\\\"\\n                  doneText=\\\"Listo\\\"\\n                  cancelText=\\\"Cancelar\\\"\\n                >\\n                </ion-datetime>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row class=\\\"ion-margin-top ion-text-center\\\">\\n            <ion-col size=\\\"12\\\" class=\\\"ion-justify-content-center\\\">\\n              <ion-button class=\\\"ion-text-center\\\" color=\\\"light\\\" (click)=\\\"resetQueryParams()\\\">\\n                <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                <ion-text>Limpiar</ion-text>\\n              </ion-button>\\n              <ion-button class=\\\"ion-text-center\\\" color=\\\"primary\\\" (click)=\\\"findData()\\\">\\n                <ion-icon name=\\\"checkmark-outline\\\"></ion-icon>\\n                <ion-text>Aplicar</ion-text>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n    <ion-col size=\\\"12\\\" class=\\\"ion-margin-start ion-margin-end\\\">\\n      <ion-text color=\\\"medium\\\">\\n        <i>\\n          <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n          Para mejor visualización de las gráficas, le recomendamos girar el dispositivo\\n          <ion-icon name=\\\"phone-portrait-outline\\\"></ion-icon>\\n          <ion-icon name=\\\"phone-landscape-outline\\\"></ion-icon>.\\n        </i>\\n      </ion-text>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-row class=\\\"ion-justify-content-center ion-margin-bottom ion-padding-bottom\\\" *ngIf=\\\"data\\\">\\n    <ion-col size=\\\"12\\\" *ngIf=\\\"data.courses\\\">\\n      <app-chart\\n        [data]=\\\"data.courses\\\"\\n        title=\\\"Mis cursos\\\"\\n        typeChart=\\\"bar\\\"\\n      ></app-chart>\\n    </ion-col>\\n    <ion-col size=\\\"12\\\" *ngIf=\\\"data.referrals\\\">\\n      <app-chart\\n        [data]=\\\"data.referrals\\\"\\n        title=\\\"Mis hijos espirituales\\\"\\n        typeChart=\\\"bar\\\"\\n      ></app-chart>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport {AxiosService} from '../../services/axios.service';\nimport {GlobalService} from '../../services/global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EstadisticaService {\n\n  constructor(\n    private axios: AxiosService,\n    private globalSer: GlobalService,\n  ) { }\n\n  async getReports(query = {}) {\n    const res: any = await this.axios.getData('/user/reports', query);\n    if (res && res.success) return res.data.reports;\n    return this.globalSer.altResponse(res);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlc3RhZGlzdGljYS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport dayjs from 'dayjs';\nimport {Router} from '@angular/router';\nimport {EstadisticaService} from './estadistica.service';\nimport {GlobalService} from '../../services/global.service';\n\n@Component({\n  selector: 'app-estadistica',\n  templateUrl: './estadistica.page.html',\n  styleUrls: ['./estadistica.page.scss'],\n})\nexport class EstadisticaPage implements OnInit {\n  data: any = null;\n  showFilter = false;\n  minInitDate: string = dayjs('2021-01-01').format('YYYY-MM-DD');\n  maxInitDate: string = dayjs().format('YYYY-MM-DD');\n  minEndDate: string = dayjs('2021-01-01').format('YYYY-MM-DD');\n  maxEndDate: string = dayjs().format('YYYY-MM-DD');\n  queryParams: any = {\n    initDate: null,\n    endDate: null,\n  };\n\n  constructor(\n    private globalSer: GlobalService,\n    private estadisticaService: EstadisticaService,\n    private router: Router,\n  ) {\n    // check if exist session\n    if (!this.globalSer.checkSession()) this.router.navigate(['/']);\n  }\n\n  async ngOnInit() {\n    await this.getData();\n  }\n\n  async getData() {\n    await this.globalSer.presentLoading();\n\n    const data = await this.estadisticaService.getReports(this.queryParams);\n\n    if (data && !data.error) {\n      this.data = data;\n      await this.globalSer.dismissLoading();\n    }\n    else if (data && data.error) {\n      await this.globalSer.dismissLoading();\n      await this.globalSer.errorSession();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  setShowFilter() {\n    this.showFilter = !this.showFilter;\n  }\n\n  async resetQueryParams() {\n    this.queryParams.initDate = null;\n    this.queryParams.endDate = null;\n    this.showFilter = !this.showFilter;\n\n    this.data = null;\n    await this.getData();\n  }\n\n  async findData() {\n    let find = false;\n    if (this.queryParams.initDate) {\n      this.queryParams.initDate = dayjs(this.queryParams.initDate).format('YYYY-MM-DD');\n      find = true;\n    }\n    if (this.queryParams.endDate) {\n      this.queryParams.endDate = dayjs(this.queryParams.endDate).format('YYYY-MM-DD');\n      find = this.queryParams.initDate !== null;\n    }\n\n    if (find) {\n      this.data = null;\n      await this.getData();\n    }\n    else this.globalSer.presentAlert('Alerta', 'Disculpe, pero debe indicar una fecha inicial');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EstadisticaPage } from './estadistica.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EstadisticaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EstadisticaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EstadisticaPageRoutingModule } from './estadistica-routing.module';\n\nimport { EstadisticaPage } from './estadistica.page';\n\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EstadisticaPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [EstadisticaPage]\n})\nexport class EstadisticaPageModule {}\n"],"sourceRoot":"webpack:///"}