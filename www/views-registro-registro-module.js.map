{"version":3,"sources":["./src/Utils/profile.data.ts","./src/app/views/registro/registro.page.scss","./src/app/views/registro/registro.service.ts","./src/app/views/registro/registro.module.ts","./src/app/views/registro/registro-routing.module.ts","./src/app/views/registro/registro.page.ts","./src/app/views/registro/registro.page.html"],"names":[],"mappings":"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","file":"views-registro-registro-module.js","sourcesContent":["export const educationLevels = [\r\n  'Preescolar',\r\n  'Básica Primaria (1-5)',\r\n  'Básica Secundaria (6-9)',\r\n  'Média (10-13)',\r\n  'Técnica Laboral',\r\n  'Técnica Profesional',\r\n  'Tecnológica',\r\n  'Universitaria',\r\n  'Especialización',\r\n  'Maestría',\r\n  'Doctorado'\r\n];\r\n\r\nexport const documentType: any[] = [\r\n  { val: 'CC', label: 'Cédula de ciudadanía' },\r\n  { val: 'TI', label: 'Tarjeta de identidad' },\r\n  { val: 'PAS', label: 'Pasaporte' },\r\n  { val: 'CE', label: 'Cédula de extrajería' },\r\n  { val: 'PE', label: 'Permiso Especial de Permanencia' },\r\n];\r\n\r\nexport const bloodType = [ 'A -', 'A +', 'AB -', 'AB +', 'B -', 'B +', 'O -', 'O +' ];\r\n\r\nexport const professions: any[] = [\r\n  'Prefiero no indicar',\r\n  'Abogado',\r\n  'Actor, Actriz, Artista, Director de Espectáculos',\r\n  'Actuario',\r\n  'Administrador',\r\n  'Aduanero/Agente de Aduanas/Inspectores de Frontera',\r\n  'Aeromozo/Azafata',\r\n  'Agente/Intermediario/Corredor Inmobiliario',\r\n  'Agente de Bolsa',\r\n  'Agente de Inmigración/Migración',\r\n  'Agente de Turismo/Viajes',\r\n  'Agente/Intermediario/Corredor de Seguros',\r\n  'Agricultor, Agrónomo, Agrologo, Arboricultor',\r\n  'albañil, Obrero de Construcción',\r\n  'Ama de Casa',\r\n  'Analista de Sistema y Computación',\r\n  'Antropólogo, Arqueólogo y Etnólogo',\r\n  'Archivero',\r\n  'Armador de Barco',\r\n  'Arquitecto 00020 Artesano',\r\n  'Asistente Social',\r\n  'Autor Literario, Escritor y Crmtico',\r\n  'Avicultor',\r\n  'Bacteriólogo, Farmacólogo, Biólogo, Científico',\r\n  'Basurero/Barrendero',\r\n  'Cajero',\r\n  'Camarero/Barman/Mesero/Chef',\r\n  'Cambista, Compra/Venta de Moneda',\r\n  'Campesino',\r\n  'Capataz',\r\n  'Cargador',\r\n  'Carpintero',\r\n  'Cartero',\r\n  'Cerrajero',\r\n  'Cobrador',\r\n  'Comerciante / Vendedor',\r\n  'Conductor, Chofer / Taxista',\r\n  'Conserje/Portero/Guardián/Vigilante',\r\n  'Constructor',\r\n  'Contador',\r\n  'Contratista',\r\n  'Corte y Confección de Ropa/Fabricante de Prendas',\r\n  'Cosmetólogo, Peluquero y Barbero',\r\n  'Decorador, Dibujante, Publicista',\r\n  'Dentista / Odontólogo',\r\n  'Deportista Profesional, Atleta, Arbitro',\r\n  'Distribuidor',\r\n  'Docente',\r\n  'Economista',\r\n  'Electricista',\r\n  'Empleada(o) del hogar / Nana',\r\n  'Empresario Exportador/Empresario Importador',\r\n  'Enfermero',\r\n  'Ensamblador',\r\n  'Escultor',\r\n  'Estudiante',\r\n  'Fotógrafo/Operadores cámara, cine y tv, locutor',\r\n  'Ganadero',\r\n  'Gasfitero',\r\n  'Historiador',\r\n  'Ingeniero',\r\n  'Interprete, Traductor',\r\n  'Jardinero',\r\n  'Jockey',\r\n  'Joyero y/o Platero / Orfebre',\r\n  'Jubilado / Pensionista',\r\n  'Laboratorista (Técnico)',\r\n  'Liquidador, Reclamaciones/Seguros',\r\n  'Maquinista / Operador de maquinaria',\r\n  'Martillero / Subastador',\r\n  'Mayorista, comercio al por mayor',\r\n  'Mecánico',\r\n  'Medico / Cirujano',\r\n  'Metalurgista',\r\n  'Miembro de las Fuerzas Armadas',\r\n  'Nutricionista',\r\n  'Obrero / Operador',\r\n  'Obstetriz',\r\n  'Organizador de Eventos',\r\n  'Panadero / Pastelero',\r\n  'Paramédico',\r\n  'Periodista',\r\n  'Perito',\r\n  'Pescador',\r\n  'Piloto',\r\n  'Pintor',\r\n  'Policía Municipal',\r\n  'Policía PNP',\r\n  'Productor de Cine / Radio / Televisión / Teatro',\r\n  'Productor, Cultivos Extensivos',\r\n  'Programador',\r\n  'Psicólogo / Terapeuta',\r\n  'Quiropráctico/Kinesiterapeuta (Kinesiólogos)',\r\n  'Relacionista Publico e Industrial',\r\n  'Relojero',\r\n  'Reparación de Automóviles, Pintor Retocador',\r\n  'Reparador de Aparatos Electrodomésticos',\r\n  'Repartidor',\r\n  'Sacerdote/Monja',\r\n  'Secretaria, Recepcionista, Telefonista',\r\n  'Seguridad/Guardaespaldas/Guardia de Seguridad',\r\n  'Servicio de Almacenamiento/Almacenero',\r\n  'Servicio de Alquiler de Vehículos',\r\n  'Servicios de Alquiler de Videos, Equipos de Sonido',\r\n  'Sociólogo',\r\n  'Tasador',\r\n  'Técnico',\r\n  'Torero',\r\n  'Tramitador',\r\n  'Transporte de Carga y/o Mudanza',\r\n  'Transportista',\r\n  'Vendedor Ambulante',\r\n  'Veterinario, Zoólogo, Zootécnico',\r\n  'Visitador Medico',\r\n  'Zapatero',\r\n  'Otros',\r\n];\r\n\r\nexport const companyType: string[] = [\r\n  'Empresa asociativa de trabajo',\r\n  'Empresa unipersonal',\r\n  'Persona natural comerciante',\r\n  'Sociedad anónima',\r\n  'Sociedad colectiva',\r\n  'Sociedad en comandita por acciones',\r\n  'Sociedad en comandita simple',\r\n  'Sociedad limitada',\r\n  'Sociedades agrarias de transformación',\r\n  'Sociedades por acciones simplificadas',\r\n  'Otro',\r\n];\r\n\r\nexport const civilStatus: string[] = [\r\n  'Soltero',\r\n  'Casado',\r\n  'Divorciado',\r\n  'Separado',\r\n  'Prefiero no indicar',\r\n];\r\n\r\nexport const gender: string[] = [\r\n  'Hombre',\r\n  'Mujer',\r\n  'Prefiero no indicar',\r\n];\r\n","export default \".pictureLogo2 {\\n  width: 100px !important;\\n  margin: 0 auto !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxyZWdpc3Ryby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBQTtFQUNBLHlCQUFBO0FBQ0YiLCJmaWxlIjoicmVnaXN0cm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBpY3R1cmVMb2dvMiB7XHJcbiAgd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbiAgbWFyZ2luOiAwIGF1dG8gIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\";","import { Injectable } from '@angular/core';\nimport {GlobalService} from '../../services/global.service';\nimport {AxiosService} from '../../services/axios.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistroService {\n\n  constructor(\n    private axios: AxiosService,\n    private globalSer: GlobalService\n  ) { }\n\n  async register(data: any) {\n    const res: any = await this.axios.postData('/register', data);\n\n    if (res && res.success) return res.data.msg;\n    return this.globalSer.altResponse(res);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistroPageRoutingModule } from './registro-routing.module';\n\nimport { RegistroPage } from './registro.page';\nimport {ComponentsModule} from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistroPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [RegistroPage]\n})\nexport class RegistroPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistroPage } from './registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistroPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {NavController} from '@ionic/angular';\nimport {RegistroService} from './registro.service';\nimport {GlobalService} from '../../services/global.service';\nimport {documentType} from '../../../Utils/profile.data';\nimport {\n  checkDocument,\n  checkEmail,\n  checkNameOrLastName, checkPassword,\n  onlyLettersInputValidation,\n  onlyNumbersInputValidation\n} from '../../../Utils/validations.functions';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.page.html',\n  styleUrls: ['./registro.page.scss'],\n})\nexport class RegistroPage implements OnInit {\n\n  documentTypes = documentType;\n  referred = false;\n  successRegister = false;\n  view = 0;\n  formData: any = {\n    email: null,\n    password: null,\n    repPassword: null,\n    names: null,\n    lastNames: null,\n    documentType: null,\n    document: null,\n    referred: null,\n  };\n\n  constructor(\n    private globalSer: GlobalService,\n    private navCtrl: NavController,\n    private registroService: RegistroService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async back() {\n    await this.navCtrl.back();\n  }\n\n  async registerMember() {\n    await this.globalSer.presentLoading('Registrando, por favor espere ...');\n\n    const data: any = {...this.formData};\n    data.document = `${data.documentType}${data.document}`;\n\n    const res = await this.registroService.register(data);\n\n    if (res && !res.error) {\n      this.successRegister = true;\n      await this.globalSer.dismissLoading();\n    }\n    else await this.globalSer.dismissLoading();\n  }\n\n  // getters and setters\n  async setView(view) {\n    if (view === 1) {\n      const validated = this.validateData(view);\n      if (!validated) this.view = view;\n      else await this.globalSer.presentAlert('Alerta', validated || 'Disculpe, pero debe completar el formulario.');\n    }\n    else this.view = view;\n  }\n\n  showInputReferred() {\n    this.referred = !this.referred;\n  }\n\n  getDocumentLabel(value: any) {\n    if (!value) return null;\n    const da = this.documentTypes.find(d => d.val === value);\n    return da ? da.label : null;\n  }\n\n  async showAlertDocumentList(selected: any = null) {\n    const inputs: any = [];\n    for (const value of this.documentTypes) {\n      inputs.push({\n        name: `documentType`,\n        type: 'radio',\n        label: value.label,\n        value: value.val,\n        checked: selected !== null && selected === value.val,\n      });\n    }\n\n    await this.globalSer.alertWithList({\n      header: 'Seleccione',\n      inputs,\n      confirmAction: (selectedValue) => {\n        this.formData.documentType = selectedValue;\n      }\n    });\n  }\n\n  validateOnlyNumbers(event: any) {\n    onlyNumbersInputValidation(event);\n  }\n\n  validateOnlyLetters(event: any) {\n    onlyLettersInputValidation(event);\n  }\n\n  /*\n  Confirms\n   */\n\n  async confirmCancel() {\n    await this.globalSer.alertConfirm({\n      header: 'Confirme',\n      message: '¿Está seguro qué desea cancelar el registro?',\n      confirmAction: () => this.back()\n    });\n  }\n\n  validateData(view: number|null = null): string|null {\n    if (view === 1) {\n      if (!/^([CC|CE|PE|TI|PAS]){2,3}/.test(this.formData.documentType)) return 'Disculpe, pero debe indicar el tipo de documento.';\n      if (!/[0-9]{5,10}/.test(this.formData.document)) return 'Disculpe, pero debe indicar el número de documento de identidad.';\n      if (!checkNameOrLastName(this.formData.names)) return 'Disculpe, pero debe indicar un nombre válido.';\n      if (!checkNameOrLastName(this.formData.lastNames)) return 'Disculpe, pero debe indicar un apellido válido.';\n      if (this.formData.referred && !checkDocument(`${this.formData.referred.toUpperCase()}`))\n        return 'Disculpe, pero debe indicar un número de documento correcto del miembro (ejm: CC12345678).';\n\n      return null;\n    }\n\n    if (!checkEmail(this.formData.email)) return 'Disculpe, pero debe indicar un correo electrónico válido.';\n    if (!checkPassword(this.formData.password))\n      return 'Disculpe, pero debe indicar una contraseña correcta.' +\n        '<br><br>Solo se permiten letras (A-Z, a-z), números (0-9) y caracteres especiales (¿?¡!=)(/&%$#,.-+*)';\n    if (this.formData.password !== this.formData.repPassword)\n      return 'Disculpe, pero las contraseñas ingresadas no coinciden.';\n\n    return null;\n  }\n\n  async confirmRegister() {\n    const validated = this.validateData();\n\n    if (!validated) {\n      await this.globalSer.alertConfirm({\n        header: 'Confirme',\n        message: '¿Está seguro qué desea registrarse con esta información?' +\n        '<br/><br/><b>NOTA</b>: Le recomendamos verificar su número de documento, ya que una vez registrado no podrá modificarlo.',\n        confirmAction: () => this.registerMember()\n      });\n    }\n    else {\n      await this.globalSer.presentAlert('Alerta', validated || 'Disculpe, pero debe completar el formulario.');\n    }\n  }\n\n}\n","export default \"<ion-content>\\n  <ion-header>\\n    <app-minheader title=\\\"Registro\\\"></app-minheader>\\n  </ion-header>\\n\\n  <ion-row>\\n    <ion-col size=\\\"12\\\" *ngIf=\\\"!successRegister\\\">\\n      <ion-card>\\n        <ion-card-content>\\n          <ion-row *ngIf=\\\"view === 0\\\">\\n            <ion-col size=\\\"12\\\">\\n              <ion-text color=\\\"medium\\\">\\n                <p>Bienvenido al registro. Por favor, complete el formulario.</p>\\n              </ion-text>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Tipo de documento (*)</ion-label>\\n                <ion-input\\n                  [readonly]=\\\"true\\\"\\n                  [value]=\\\"formData.documentType ? getDocumentLabel(formData.documentType) : ''\\\"\\n                  (click)=\\\"showAlertDocumentList(formData.documentType)\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Número de documento (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.document\\\"\\n                  autocomplete=\\\"off\\\"\\n                  maxlength=\\\"10\\\"\\n                  (keypress)=\\\"validateOnlyNumbers($event)\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                >\\n                </ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nombre(s) (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.names\\\"\\n                  autocomplete=\\\"off\\\"\\n                  (keyup)=\\\"validateOnlyLetters($event)\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Apellido(s) (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.lastNames\\\"\\n                  autocomplete=\\\"off\\\"\\n                  (keyup)=\\\"validateOnlyLetters($event)\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-checkbox slot=\\\"start\\\" (click)=\\\"showInputReferred()\\\"></ion-checkbox>\\n                <ion-label color=\\\"medium\\\">He sido referido por un miembro.</ion-label>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" *ngIf=\\\"referred\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Nº de documento del miembro</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.referred\\\"\\n                  autocomplete=\\\"off\\\"\\n                  class=\\\"ion-text-uppercase\\\"\\n                ></ion-input>\\n              </ion-item>\\n              <ion-text color=\\\"medium\\\"><i>Ejm: CC12345678</i></ion-text>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" class=\\\"ion-margin-top\\\">\\n              <ion-text color=\\\"medium\\\"><i class=\\\"toSmall\\\">(*) Campos requeridos.</i></ion-text>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-padding-top ion-padding-bottom ion-margin-bottom ion-text-center\\\">\\n              <ion-button color=\\\"light\\\" (click)=\\\"confirmCancel()\\\">\\n                <ion-icon name=\\\"close-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-text>Cancelar</ion-text>\\n              </ion-button>\\n              <ion-button color=\\\"primary\\\" (click)=\\\"setView(1)\\\">\\n                <ion-text>Siguiente</ion-text>\\n                <ion-icon name=\\\"arrow-forward-outline\\\" slot=\\\"end\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row *ngIf=\\\"view === 1\\\">\\n            <ion-col size=\\\"12\\\">\\n              <ion-text color=\\\"medium\\\">\\n                <p>Por favor, complete los campos del formulario.</p>\\n              </ion-text>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Correo electrónico (*)</ion-label>\\n                <ion-input [(ngModel)]=\\\"formData.email\\\" autocomplete=\\\"off\\\" class=\\\"ion-text-uppercase\\\"></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Contraseña (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.password\\\"\\n                  autocomplete=\\\"off\\\"\\n                  type=\\\"password\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\">\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\" color=\\\"medium\\\">Repita la contraseña (*)</ion-label>\\n                <ion-input\\n                  [(ngModel)]=\\\"formData.repPassword\\\"\\n                  autocomplete=\\\"off\\\"\\n                  type=\\\"password\\\"\\n                ></ion-input>\\n              </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" class=\\\"ion-margin-top\\\">\\n              <ion-text color=\\\"medium\\\"><i class=\\\"toSmall\\\">(*) Campos requeridos.</i></ion-text>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-padding-top ion-padding-bottom ion-margin-bottom ion-text-center\\\">\\n              <ion-button color=\\\"light\\\" (click)=\\\"setView(0)\\\">\\n                <ion-icon name=\\\"arrow-back-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-text>Regresar</ion-text>\\n              </ion-button>\\n              <ion-button color=\\\"primary\\\" (click)=\\\"confirmRegister()\\\">\\n                <ion-icon name=\\\"checkmark-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-text>Regístrame</ion-text>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n    <ion-col size=\\\"12\\\" *ngIf=\\\"successRegister\\\">\\n      <ion-card>\\n        <ion-card-content>\\n          <ion-row>\\n            <ion-col [size]=\\\"12\\\" class=\\\"ion-text-center\\\">\\n              <ion-img class=\\\"pictureLogo2 ion-margin-top ion-padding-top\\\" [src]=\\\"'/assets/icon/check.svg'\\\"></ion-img>\\n              <ion-card-title class=\\\"ion-margin-top ion-padding-top\\\">\\n                Se ha registrado exitosamente.<br/>\\n                Ahora puede acceder a la aplicación.\\n              </ion-card-title>\\n            </ion-col>\\n            <ion-col size=\\\"12\\\" size-sm=\\\"12\\\" class=\\\"ion-margin-top ion-padding-top ion-padding-bottom ion-margin-bottom ion-text-center\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"back()\\\">\\n                <ion-icon name=\\\"home-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-text>Iniciar sesión</ion-text>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}